:root{
    --bg-body-color: #333;
    --main-font-color: white;
    --bg-accent-color: #363b3f;
    --bg-card-color: rgba(4, 28, 56, 0.445);
}


/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
    box-sizing: border-box;
  }
  
  /* 2. Remove default margin */
  * {
    margin: 0;
  }
  
  /* 3. Enable keyword animations */
  @media (prefers-reduced-motion: no-preference) {
    html {
      interpolate-size: allow-keywords;
    }
  }
  
  body {
    /* 4. Add accessible line-height */
    line-height: 1.5;
    /* 5. Improve text rendering */
    -webkit-font-smoothing: antialiased;
    background-color: var(--bg-body-color);
    color: var(--main-font-color);
    padding: 20px;
  }
  
  /* 6. Improve media defaults */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  
  /* 7. Inherit fonts for form controls */
  input, button, textarea, select {
    font: inherit;
  }
  
  /* 8. Avoid text overflows */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  
  /* 9. Improve line wrapping */
  p {
    text-wrap: pretty;
  }
  h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
  }
  
  /*
    10. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }

  /*css rest for basic styles */

  .container{

    width: 90%;
    max-width: 1100px;
    height: 800px;
    margin: 0 auto;
  }



  .header{                                                                                                  
    position: sticky;
    top: 0;
    background-color: var(--bg-accent-color);
    padding: 15px 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    z-index: 999;
    /*comments for this are desktop version to remind me*/
    padding: 20px;

    & #city_input{
        background-color: #333;
        border: none;
        cursor: pointer;
        padding: 12px;
        font-size: 16px;
        border-radius: 25px;
        color: white;
        &:focus{
            outline: none;
        }
  }
}

/*The & will just select all the nested elements inside the parent element ex. below

h1.class  {            
}

h1 {
    &.class {            
        {
    }

*/

.card{
  padding: 20px;
  display: flex;
  flex-direction: column;
  border-radius: 20px;
  background-color: var(--bg-card-color);
  backdrop-filter: blur(10px);
  box-shadow: 0 0 10px rgba(221, 221, 221, 0.2);
}          

.weather-data {
    display: flex;
    gap: 20px;
    margin-top: 20px;
    height: 100%;
    flex-direction: column;
  /*this needs to change for desktop version to row*/  
}

.weather-left {
    flex: 1;
    width: 100%;
    height: 100%;
}

.weather-left .card {
    height: 100%;
    min-height: 200px;
    text-align: center;
    display: flex;
    justify-content: center;
    align-content:center;

}
.weather-right .card{
  border: red solid 1px;
  min-height: 100%;
}

.details{
  height: 100%;
}
/*Desktop size*/  
@media (min-width: 680px){
  .weather-right {
    flex: 2;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
}
.weather-data {
  flex-direction: row;
}

.weather-right .card {
  height: 20%;
}

}